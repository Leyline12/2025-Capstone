plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	//google 로그인
	implementation 'com.google.api-client:google-api-client:2.0.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.42.2'
	implementation 'com.google.oauth-client:google-oauth-client:1.34.1'


	//webflux 이용
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'io.projectreactor.netty:reactor-netty'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation("org.json:json:20230227")
	implementation("org.jsoup:jsoup:1.16.1")
	implementation("com.squareup.okhttp3:okhttp:4.9.3")
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.mockito:mockito-core:5.10.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
  doFirst {
    def envFile = file('.env')
    if (envFile.exists()) {
      def props = new Properties()
      envFile.withInputStream { props.load(it) }
      props.each { key, value ->
        environment key, value
      }
    }
  }
}